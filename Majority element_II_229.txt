//https://leetcode.com/problems/majority-element-ii/



class Solution {
    public List<Integer> majorityElement(int[] nums) {
        int candidate1 = Integer.MIN_VALUE;
        int candidate2 = Integer.MIN_VALUE;
        int heart1 = 0;
        int heart2 = 0;
        int n = nums.length;

        for (int i = 0; i < n; i++) {

            if (nums[i] == candidate1)
                heart1++;
            else if (nums[i] == candidate2)
                heart2++; 
            else if (heart1 == 0) {
                candidate1 = nums[i];
                heart1 = 1;
            }
            else if (heart2 == 0) {
                candidate2 = nums[i];
                heart2 = 1;
            } else{
                heart1--;
                heart2--;
            }
        }
        int count1 = 0;
        int count2 = 0;
        for(int i = 0; i < n; i++){
            if(candidate1 == nums[i])count1++;
            if(candidate2 == nums[i])count2++;
        }
        List<Integer> ans = new ArrayList<>();
        if(count1>n/3)ans.add(candidate1);
        if(count2>n/3)ans.add(candidate2);
        return ans;
    }
}